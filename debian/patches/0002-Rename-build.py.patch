From: Edward Betts <edward@4angle.com>
Date: Thu, 20 Oct 2022 09:50:05 +0100
Subject: Rename build.py

---
 _build.py      | 40 ++++++++++++++++++++++++++++++++++++++++
 build.py       | 40 ----------------------------------------
 pyproject.toml |  2 +-
 3 files changed, 41 insertions(+), 41 deletions(-)
 create mode 100644 _build.py
 delete mode 100644 build.py

diff --git a/_build.py b/_build.py
new file mode 100644
index 0000000..cc8bc17
--- /dev/null
+++ b/_build.py
@@ -0,0 +1,40 @@
+"""Build optional cython modules."""
+
+import os
+from distutils.command.build_ext import build_ext
+
+
+class BuildExt(build_ext):
+    def build_extensions(self):
+        try:
+            super().build_extensions()
+        except Exception:
+            pass
+
+
+def build(setup_kwargs):
+    if os.environ.get("SKIP_CYTHON", False):
+        return
+    try:
+        from Cython.Build import cythonize
+
+        setup_kwargs.update(
+            dict(
+                ext_modules=cythonize(
+                    [
+                        "src/dbus_fast/aio/message_reader.py",
+                        "src/dbus_fast/message.py",
+                        "src/dbus_fast/signature.py",
+                        "src/dbus_fast/unpack.py",
+                        "src/dbus_fast/_private/marshaller.py",
+                        "src/dbus_fast/_private/unmarshaller.py",
+                    ],
+                    compiler_directives={"language_level": "3"},  # Python 3
+                ),
+                cmdclass=dict(build_ext=BuildExt),
+            )
+        )
+    except Exception:
+        if os.environ.get("REQUIRE_CYTHON"):
+            raise
+        pass
diff --git a/build.py b/build.py
deleted file mode 100644
index cc8bc17..0000000
--- a/build.py
+++ /dev/null
@@ -1,40 +0,0 @@
-"""Build optional cython modules."""
-
-import os
-from distutils.command.build_ext import build_ext
-
-
-class BuildExt(build_ext):
-    def build_extensions(self):
-        try:
-            super().build_extensions()
-        except Exception:
-            pass
-
-
-def build(setup_kwargs):
-    if os.environ.get("SKIP_CYTHON", False):
-        return
-    try:
-        from Cython.Build import cythonize
-
-        setup_kwargs.update(
-            dict(
-                ext_modules=cythonize(
-                    [
-                        "src/dbus_fast/aio/message_reader.py",
-                        "src/dbus_fast/message.py",
-                        "src/dbus_fast/signature.py",
-                        "src/dbus_fast/unpack.py",
-                        "src/dbus_fast/_private/marshaller.py",
-                        "src/dbus_fast/_private/unmarshaller.py",
-                    ],
-                    compiler_directives={"language_level": "3"},  # Python 3
-                ),
-                cmdclass=dict(build_ext=BuildExt),
-            )
-        )
-    except Exception:
-        if os.environ.get("REQUIRE_CYTHON"):
-            raise
-        pass
diff --git a/pyproject.toml b/pyproject.toml
index 733dc2d..09554c3 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -14,7 +14,7 @@ classifiers = [
     "Operating System :: OS Independent",
     "Topic :: Software Development :: Libraries",
 ]
-build = "build.py"
+build = "_build.py"
 packages = [
     { include = "dbus_fast", from = "src" },
 ]
